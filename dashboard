import dash
import dash_core_components as dcc
import dash_html_components as html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

income_df = pd.read_csv('Book1.csv')



app.layout = html.Div(children=[
    html.H1(children='Hello Dash'),

    html.Div(children='''
        Dash: A web application framework for Python.
    '''),

    dcc.RangeSlider(
        id='period_slider',
        min=income_df.date.min(),
        max=income_df.date.max(),
        step = 1,
        marks = {int(value) : str(value) for value in income_df['date'].unique()},
        value = [income_df.date.min(), income_df.date.max()]

    ),

    html.Div(
        dcc.Graph(id = "RevenueBarPlot",
        figure = {})
    )

])

#################### Connect the Plotly graphs with Dash Components ##########################
@app.callback(
     Output(component_id='RevenueBarPlot', component_property='figure'),
    Input(component_id='period_slider', component_property='value')
)

def update_graph(period_range):
    
    income_dff = income_df.copy()
    income_dff = income_dff[(income_dff["date"] >= period_range[0]) & (income_dff["date"] <= period_range[1])]
    
    # Plotly Express
    fig = px.bar(income_dff, x="date", y="revenue", color = "symbol", barmode = "group")

    return fig


#################### Create the server ##########################################################

if __name__ == '__main__':
    app.run_server(debug=True)
